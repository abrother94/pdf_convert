#!/bin/bash

CPP_BODY()
{
    local me_name="$1"
    local me_num="$2"

echo "
// ------------------------------------------------------------------
//  1.Create by create_me_cpp.sh ME_NAME/XXX_XXX_XXX automatically
// ------------------------------------------------------------------

#include <iostream>
#include <fstream>
#include <istream>
#include <dirent.h>
#include <sys/types.h>
#include <string.h>
#include <typeinfo>
#include <$me_name.hpp>

$me_name::$me_name()
{

}

$me_name::$me_name(int class_id,int instance_id,  Json::Value me_s):ME_S(class_id, instance_id, me_s)
{

}

$me_name::~$me_name()
{
    printf(\"~$me_name\r\n\");
}

void $me_name::get_method()
{ 
    printf(\"$me_name get_method\r\n\"); 
}

"

}

CPP_ATT()
{
    local me_name="$1"
    local me_num="$2"

    for(( n=1; n<= "$me_num"; n++))
    do
echo "
	
bool $me_name::attribute_"$n"_method(Action in_Action, UI32_T *value, void *arg)
{
    switch(in_Action)
    {
        case MSG_TYPE_GET:
            {
                // Default action for value == 4bytes
		arg = (void *)&m_Attributes[$(($n-1))].Value;
                break;
            }
        case MSG_TYPE_SET:
            {
                // Default action for value == 4bytes
                m_Attributes[$(($n-1))].Value = *value;
                break;
            }
        default:
            {
                break;
            }
    }
    return true;
}
"

    done

}

CPP_TEMP()
{
    local me_name="$1"
    local me_num="$2"
    CPP_BODY "$me_name" "$me_num"
    CPP_ATT  "$me_name" "$me_num"
}
